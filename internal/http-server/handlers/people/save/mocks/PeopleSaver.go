// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// PeopleSaver is an autogenerated mock type for the PeopleSaver type
type PeopleSaver struct {
	mock.Mock
}

// SavePeople provides a mock function with given fields: name, surname, patronym, gender, nationality, age
func (_m *PeopleSaver) SavePeople(name string, surname string, patronym string, gender string, nationality string, age int) (int64, error) {
	ret := _m.Called(name, surname, patronym, gender, nationality, age)

	if len(ret) == 0 {
		panic("no return value specified for SavePeople")
	}

	var r0 int64
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string, string, string, string, int) (int64, error)); ok {
		return rf(name, surname, patronym, gender, nationality, age)
	}
	if rf, ok := ret.Get(0).(func(string, string, string, string, string, int) int64); ok {
		r0 = rf(name, surname, patronym, gender, nationality, age)
	} else {
		r0 = ret.Get(0).(int64)
	}

	if rf, ok := ret.Get(1).(func(string, string, string, string, string, int) error); ok {
		r1 = rf(name, surname, patronym, gender, nationality, age)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPeopleSaver creates a new instance of PeopleSaver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPeopleSaver(t interface {
	mock.TestingT
	Cleanup(func())
}) *PeopleSaver {
	mock := &PeopleSaver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
